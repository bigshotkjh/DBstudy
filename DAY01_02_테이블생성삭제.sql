/*
  관계형 데이터베이스
  1. 정형화된 구조를 가지고 있는 데이터베이스이다.
  2. 테이블 (표) 구조를 가진다.
*/
/*
  테이블 용어
  행      열
  Row     Column
  Record  Attribute
*/
/*
  테이블 만들기
  1. 열(Column)을 만드는 과정이다.
  2. 쿼리문
    CREATE TABLE 테이블명 (
        열이름 데이터타입 [제약조건 제약조건 ...]
      , 열이름 데이터타입 [제약조건 제약조건 ...]
      , ...
    );


    CREATE TABLE USER_T (
        USER_NO   NUMBER             NOT NULL UNIQUE
      , USER_NAME VARCHAR2(100 BYTE) NULL
    );
*/
/*
  데이터타입
  1. NUMBER(p,s)    : 정밀도가 p이고, 스케일이 s인 숫자
    1) 정밀도 p : 전체 유효 숫자
    2) 스케일 s : 소수부의 유효 숫자
    3) 스케일만 생략하면 정수로 표시하는 숫자
    4) 정밀도와 스케일을 생략하면 정수, 실수 모두 표시할 수 있는 숫자
    ex(예를 들어, NUMBER(5,2)는 최대 다섯 자리의 숫자를 저장할 수 있으며, 그 중 두 자리는 소수점 이하 자릿수로 사용됩니다.
       따라서, 이 데이터 타입은 최대 999.99까지의 숫자를 저장할 수 있습니다.)

  2. CHAR(size)     : 고정 문자

  3. VARCHAR2(size) : 가변 문자 (최대 4000 BYTE)
    ex(예를 들어, CHAR(10)은 길이가 정확히 10인 문자열을 저장합니다. 만약 저장하는 문자열이 10자보다 짧다면, 나머지 공간은 공백으로 채워집니다.
       고정 길이 문자열이 필요한 경우 CHAR을 사용하고, 가변 길이 문자열이 필요한 경우 VARCHAR를 사용하는 것이 일반적입니다.)

  4. CLOB           : 길이가 긴 문자(CLOB(Character Large Object)는 SQL에서 대용량 텍스트 데이터를 저장하기 위해 사용되는 데이터 타입입니다.
                      CLOB은 매우 큰 문자열 데이터를 저장할 수 있으며, 주로 문서, HTML, JSON, XML 등의 대규모 텍스트 데이터를 저장하는 데 사용됩니다.)

  5. DATE           : 날짜/시간 (년월일시분초)
                      (DATE는 SQL에서 날짜와 시간을 저장하기 위해 사용되는 데이터 타입입니다. 
                      DATE 타입은 일반적으로 연도, 월, 일, 시간, 분, 초를 포함하는 날짜와 시간 정보를 저장할 수 있습니다.)

  6. TIMESTAMP      : 날짜/시간 (년월일시분초 마이크로초(백만분의 1초))
                      (TIMESTAMP는 SQL에서 날짜와 시간을 보다 정밀하게 저장하기 위해 사용되는 데이터 타입입니다. TIMESTAMP는 일반적으로 연도, 월, 일, 시간, 분, 초를 포함하며, 초 이하의 소수점 단위까지 저장할 수 있습니다. 이는 DATE 타입보다 더 정확한 시간 데이터를 다룰 수 있게 해줍니다.)
*/
/*
  제약조건
  1. 필수여부  :  NULL(디폴트) / NOT NULL
  2. 중복불가  :  UNIQUE
  3. 값의제한  :  CHECK(조건)
                  (CHECK 제약 조건은 SQL에서 테이블의 특정 컬럼에 대해 허용 가능한 값의 범위를 제한하는 데 사용됩니다. CHECK 제약 조건을 사용하면 데이터 무결성을 유지할 수 있으며, 잘못된 데이터가 테이블에 삽입되는 것을 방지할 수 있습니다.)
  4. 기본키    :  PRIMARY KEY
  5. 외래키    :  FOREIGN KEY
*/
CREATE TABLE USER_T (
    USER_NO   NUMBER             NOT NULL UNIQUE
  , USER_NAME VARCHAR2(100 BYTE) NULL
);

/*
  테이블 삭제하기
  1. 테이블을 생성한 역순으로 삭제해야 한다. (즉 마지막에 만든것 부터 삭제해라.)
  2. 삭제 후 취소할 수 없다.
  3. 쿼리문
    DROP TABLE 테이블명;
*/
DROP TABLE USER_T;